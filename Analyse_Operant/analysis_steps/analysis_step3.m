% This initialisation is need to run this function in stand alone mode
clc;clear all;close all;
data_prefix = 'M89971_20210723_sess11_rec6_SWE';
rawdata_folder = 'E:\NAS_SD\SuiviClient\Triffilieff\AnnaRoman\DataAnna_Baseline\M89971';
analysis_folder = 'E:\NAS_SD\SuiviClient\Triffilieff\AnnaRoman\AnalysisAnna_Baseline\M89971';
step1_mat_path = [analysis_folder filesep data_prefix '_step1.mat'];

% Load the results of the step1 of the analysis, the resulting structure
% "s" contains the onset times of the video frames of the behavioral
% camera
load(step1_mat_path);

% read the VideoFile
video_path = [rawdata_folder filesep data_prefix '.avi'];
v = VideoReader(video_path);
video_freq_Hz = v.FrameRate;
video_num_frames = v.NumFrames;
video_height = v.Height;
video_width = v.Width;
image_size_max = max([v.Height v.Width]);
frame0 = readFrame(v);
clear v

% read the data from bonsai csv according to the template generated by
% aquineuro
bonsai_path = [rawdata_folder filesep data_prefix '_bonsai.csv'];
[t,x,y]=getBonsaiData(bonsai_path, video_freq_Hz);


debug_mode = 0;
% interpolation of dff data to fit camera frame times
[dff_synchronized, t_synchronized] = getSynchronizedDFF(s, debug_mode);


% Build an occupancy and an activity map
bin_size=40;
[occupancy_map_sec,activity_map] = getActivityMap(x, y, dff_synchronized, bin_size, image_size_max, video_freq_Hz);

% Plot the raw trajectory
plot_trajectory(x,y);

% Plot the occupancy map
title_str = 'occupancy map';
colormap_ = hot(1024);
colorbar_label_str = 'Time(s)';
map = occupancy_map_sec;
empty_pixel_color = [];
plot_map(map, title_str, colormap_, colorbar_label_str, empty_pixel_color);

% Plot the activity map
title_str = 'activity map';
colormap2_ = winter(1024);
colorbar_label_str = 'DFF (%)';
map = activity_map;
empty_pixel_color = [1, 1, 1];
plot_map(map, title_str, colormap2_, colorbar_label_str, empty_pixel_color);


%Define Zones
zone1.x = [308,429,729,590];
zone1.y = [190,82,403,526];
zone1.y = video_height - zone1.y;

zone2.x = [588,761,606,457];
zone2.y = [528,587,970,924];
zone2.y = video_height - zone2.y;

zone3.x = [729,1152,1178,762];
zone3.y = [406,335,498,586];
zone3.y = video_height - zone3.y;

zones = {zone1, zone2, zone3};

debug_mode = 0;
stats = get_zones_stats(x,video_height-y, dff_synchronized, video_freq_Hz,frame0, zones, debug_mode)






